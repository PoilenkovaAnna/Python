'''
Статистика вызовов

Написать, держитесь крепче, генератор-декоратор statcounter(), который конструирует 
объекты (назовём один из них stat) со следующим поведением. Первый вызов next(stat) 
(он же stat.send(None)) возвращает словарь, в котором stat будет хранить информацию 
вида функция: количество вызовов, где функция — это исходный (не обёрнутый) 
объект-функция (да, так тоже можно!). Словарь заполняется в порядке вызовов 
соответствующих декораторов. Все последующие вызовы stat.send(function) оборачивают 
вызов произвольной функции function увеличением на 1 соответствующего элемента 
словаря. Глобальными именами пользоваться нельзя.
'''

def statcounter():
    
    def decr(f):
        dec[f] = 0
        
        def newfun(*args, **kwargs):
            res = f(*args, **kwargs)
            dec[f] += 1
            return res
        
        return newfun
    
    dec =  {}    
    f = yield dec #next(stat)

    while(True):
        f = yield decr(f) # для входящих функций 

